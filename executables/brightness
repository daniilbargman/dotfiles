#!/usr/bin/env bash
# vim: set filetype=sh
#
# Set screen brightness
#
# Author: Daniil Bargman (daniil.bargman@gmail.com)
#
# base directory of this file accounting for symlinks
SOURCE="${BASH_SOURCE[0]}"
while [ -h "$SOURCE" ]; do # resolve $SOURCE until file is no longer a symlink
  BASE_DIR="$( cd -P "$( dirname "$SOURCE" )" >/dev/null 2>&1 && pwd )"
  SOURCE="$(readlink "$SOURCE")"
done
BASE_DIR="$( cd -P "$( dirname "$SOURCE" )" >/dev/null 2>&1 && pwd )"
SCRIPT_NAME="${0##*/}"
###############################################################################

# default message appendix on errors
function append_error {
    echo "run '$BASE_DIR/$SCRIPT_NAME -h' for help on '$SCRIPT_NAME'."
    exit 1
}

# trap errors from third-party functions
trap append_error ERR

# manual error handler: refer to help flag, and exit (use in place of echo)
function error_exit {
    echo
    echo $1
    append_error
}

# help function
function print_help {
cat << EOF

===============================================================================
===============================================================================
==============================================================================

Set screen brightness. If no SCREEN argument is provided explicitly, the first
connected screen will be chosen using:

    xrandr -q | grep -Po ".* connected"


Usage:

  brightness <value between 0 and 1> [SCREEN=<screen>]


Help on this command:

  $SCRIPT_NAME ( -h | --help )


===============================================================================
===============================================================================
===============================================================================
EOF
}

# define argument defaults
allowed_args=( SCREEN )
help_flags=( "-h" "--help" )

# extract all script arguments provided
all_args=("$@")

# brightness value
[ "$(echo $1 | grep -Px "[01](\.0)?|(0\.[1-9])?")" = "" ] \
    && error_exit "Brightness level must be 0, 1 or 0.<1-9>"
value=$1


# parse and validate arguments
screen=$(xrandr -q | grep -Po ".* connected" | sed "s% connected%%g")
for i in "${all_args[@]:1}"; do

    # parse argument into name and value, if it has the form "NAME=VALUE"
    IFS='=' read -r argn argv <<< "$i"

    # print help if requested
    if [[ " ${help_flags[@]} " =~ "$i" ]]; then
        print_help
        exit 0

    # catch illegal arguments and throw error
    elif [[ ! " ${allowed_args[@]} " =~ "$argn" ]]; then
        error_exit "Illegal argument or flag: $argn."

    # apply actual logic to parsed argument
    else
        screen=$argv
    fi
done

# actual code ...
xrandr --output $screen --brightness $value

# done.
