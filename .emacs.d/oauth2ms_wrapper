#!/usr/bin/env bash
# vim: set filetype=sh :
#
# decrypt config file from pass and run oauth2ms
#
# Author: Daniil Bargman (daniil.bargman@gmail.com)
#
# base directory of this file accounting for symlinks
SOURCE="${BASH_SOURCE[0]}"
while [ -h "$SOURCE" ]; do # resolve $SOURCE until file is no longer a symlink
    BASE_DIR="$( cd -P "$( dirname "$SOURCE" )" >/dev/null 2>&1 && pwd )"
    SOURCE="$(readlink "$SOURCE")"
done
BASE_DIR="$( cd -P "$( dirname "$SOURCE" )" >/dev/null 2>&1 && pwd )"
[ -z "${SCRIPT_NAME:-}" ] && export SCRIPT_NAME="${0##*/}"
###############################################################################

# error-safe script settings
set -Eeuo pipefail

# default message appendix on errors
function append_error {
    bl=${BASH_LINENO[$((${#BASH_LINENO[@]} - 2))]}
    echo line $bl in $BASE_DIR/$SCRIPT_NAME
    exit 1
}

# trap errors from third-party functions
trap append_error ERR

# manual error handler: refer to help flag, and exit (use in place of echo)
function error_exit {
    echo
    echo $1
    append_error
}

# decrypt config from pass
[ -z "${1:-}" ] && error_exit \
    "please provide the name of the config to extract from the 'pass' command"

# decrypt into temp directory so it's cleared on restart
rm -f ~/.config/oauth2ms/config.json
pass show $1 > ~/.config/oauth2ms/config.json

# run with encoding flag (emacs smtpmail), nor without (mbsync)
[ -z "${2:-}" ] && oauth2ms || oauth2ms "${2:-}"

# clean up
rm -f ~/.config/oauth2ms/config.json

# # deleting this file causes the browser to open a login session every time
# # the server is contacted. however, keeping it may cause the command to fail
# # eventually, which may be fixed by removing the file manually.
# rm -f ~/.local/share/oauth2ms/credentials.bin

#
