#    -*- mode: org -*-


Archived entries from file /home/daniilbargman/.emacs.d/emacs-customization-ideas.org


* DISCARDED Figure out a way for Emacs to rely exclusively on config files for customization
  :PROPERTIES:
  :ARCHIVE_TIME: 2021-01-15 Fri 17:32
  :ARCHIVE_FILE: ~/.emacs.d/emacs-customization-ideas.org
  :ARCHIVE_OLPATH: Improvement ideas for Emacs configuration
  :ARCHIVE_CATEGORY: emacs-customization-ideas
  :ARCHIVE_TODO: DISCARDED
  :END:
  - State "DISCARDED"  from "PONDERING"  [2021-01-15 Fri 17:16] \\
    It seems emacs should be / is behaving this way by default. Only
    deviations to this behaviour are due to bugs.
  - State "PONDERING"  from              [2020-12-08 Tue 22:28] \\
    Emacs seems to handle settings changes in a strange way. For example,
    when a variable (with a default value of ~nil~) is overridden in a
    config file, the setting value changes. But then the override is
    commented out and Emacs is restarted, the variable is not reset to its
    nil value. This implies that Emacs settings are not only persisted
    in configuration files and the custom-file, but also somewhere in Emacs
    internals.
     
    The idea is to find a way for Emacs to behave more like Vim in this
    respect, meaning all customizations should be reset when an Emacs
    session is closed, and configuration files should be used as the single
    source of truth.
     


Archived entries from file /home/daniilbargman/.emacs.d/emacs-customization-ideas.org


* DONE Integrate an email client
  :PROPERTIES:
  :ARCHIVE_TIME: 2021-01-15 Fri 17:32
  :ARCHIVE_FILE: ~/.emacs.d/emacs-customization-ideas.org
  :ARCHIVE_OLPATH: Improvement ideas for Emacs configuration
  :ARCHIVE_CATEGORY: emacs-customization-ideas
  :ARCHIVE_TODO: DONE
  :END:
  - State "DONE"       from "SCHEDULED"  [2021-01-15 Fri 17:15] \\
    Integrated mu4e client and org-msg for HTML messages.
  - State "SCHEDULED"  from              [2020-12-08 Tue 22:49] \\
    Would be nice to make use of Emacs' email client capabilities. Need to
    check the different options out there for checking and writing emails
    from within Emacs.



Archived entries from file /home/daniilbargman/.emacs.d/emacs-customization-ideas.org


* DISCARDED Code folding
  :PROPERTIES:
  :ARCHIVE_TIME: 2021-01-15 Fri 17:32
  :ARCHIVE_FILE: ~/.emacs.d/emacs-customization-ideas.org
  :ARCHIVE_OLPATH: Improvement ideas for Emacs configuration
  :ARCHIVE_CATEGORY: emacs-customization-ideas
  :ARCHIVE_TODO: DISCARDED
  :END:
  - State "DISCARDED"  from "TESTING"    [2021-01-15 Fri 17:14] \\
    Folding does not work too well in emacs. Managed to configure basic
    folding with the built-in hideshow mode. For the rest, relying on
    smarter code navigation.
  - State "TESTING"    from "SCHEDULED"  [2020-12-08 Tue 22:37] \\
    Tried out origami and origami-lsp, but the plugin is extremely slow
    for large files. Other custom plugins either do not exist, or do
    not provide the necessary functionality. Will try to customize the
    built-in hideshow mode instead.

    [ ] custom function to toggle folding, which recognizes the
    inner-most code block as the one that should be folded

    [ ] folding of multi-line comments and/or strings

    [ ] folding of conditionals and loops

    [ ] folding of import blocks in python

    [ ] potentially, folding of entire code blocks using separator



Archived entries from file /home/daniilbargman/.emacs.d/emacs-customization-ideas.org


* DONE Add/configure snippets
  :PROPERTIES:
  :ARCHIVE_TIME: 2021-01-15 Fri 17:32
  :ARCHIVE_FILE: ~/.emacs.d/emacs-customization-ideas.org
  :ARCHIVE_OLPATH: Improvement ideas for Emacs configuration
  :ARCHIVE_CATEGORY: emacs-customization-ideas
  :ARCHIVE_TODO: DONE
  :END:
  - State "DONE"       from "SCHEDULED"  [2021-01-15 Fri 17:17] \\
    YASnippet has been installed and configured. Compatibility issues with
    LSP and company mode resolved.
  - State "SCHEDULED"  from              [2020-11-27 Fri 16:28] \\
    Snippet support has much more functionality in Emacs than in
    Vim. Snippets from Vim can be carried over pretty much as they are. More
    snippets can / should potentially be created for other tasks.
   - [X] Bash snippet with emacs shell scripting mode flag in header
       - Note taken on [2020-11-27 Fri 16:31] \\
	   Bash header for Emacs is: ~# -*- mode: sh; sh-shell; bash; -*-~
   - [ ] Python snippet; add hook to auto-insert into new .py files 
   - [X] Elisp header snippet with presets



Archived entries from file /home/daniilbargman/.emacs.d/emacs-customization-ideas.org


* DONE Python customisations: see emacswiki python programming in emacs
  :PROPERTIES:
  :ARCHIVE_TIME: 2021-01-15 Fri 17:32
  :ARCHIVE_FILE: ~/.emacs.d/emacs-customization-ideas.org
  :ARCHIVE_OLPATH: Improvement ideas for Emacs configuration
  :ARCHIVE_CATEGORY: emacs-customization-ideas
  :ARCHIVE_TODO: DONE
  :END:
  - State "DONE"       from "SCHEDULED"  [2021-01-15 Fri 17:08] \\
    Deployed all relevant python customizations. Some of the available
    solutions were not perfect for the use case, so implemented them in
    other ways. For example, the iPython shell is now launched within a term
    process not a shell (similar to bind-terminal-shell). Vim-style code
    block formatting is now implemented via a custom elisp function.
** DONE iPython shell
   - State "DONE"       from "SCHEDULED"  [2021-01-15 Fri 17:08]
** DONE Talk to editor
   - State "DONE"       from "SCHEDULED"  [2021-01-15 Fri 17:08]
** DONE Use K8S pod as runtime
   - State "DONE"       from "SCHEDULED"  [2021-01-15 Fri 17:08]
** DONE Highlighting and traversing code blocks
   - State "DONE"       from "SCHEDULED"  [2021-01-15 Fri 17:08]
** DONE re-formatting of iterables and comprehensions as in the Vim customization
   - State "DONE"       from "SCHEDULED"  [2021-01-15 Fri 17:07]



Archived entries from file /home/daniilbargman/.emacs.d/emacs-customization-ideas.org


* DONE Session management
  :PROPERTIES:
  :ARCHIVE_TIME: 2021-01-15 Fri 17:32
  :ARCHIVE_FILE: ~/.emacs.d/emacs-customization-ideas.org
  :ARCHIVE_OLPATH: Improvement ideas for Emacs configuration
  :ARCHIVE_CATEGORY: emacs-customization-ideas
  :ARCHIVE_TODO: DONE
  :END:
  - State "DONE"       from "TESTING"    [2020-11-21 Sat 03:05] \\
    Works as intended. Setup may be further improved if encrypted drive can
    be mounted before the sessions are loaded. Otherwise, Emacs cannot see
    files from encrypted locations and some of the session tabs are dropped.
  - State "TESTING"    from "SCHEDULED"  [2020-11-08 Sun 00:31] \\
    Session management should be sufficient between Emacs 27's built-in
    tab-bar-mode and session persistence.



Archived entries from file /home/daniilbargman/.emacs.d/emacs-customization-ideas.org


* DONE treemacs integration
  :PROPERTIES:
  :ARCHIVE_TIME: 2021-01-15 Fri 17:32
  :ARCHIVE_FILE: ~/.emacs.d/emacs-customization-ideas.org
  :ARCHIVE_OLPATH: Improvement ideas for Emacs configuration
  :ARCHIVE_CATEGORY: emacs-customization-ideas
  :ARCHIVE_TODO: DONE
  :END:
  - State "DONE"       from "SCHEDULED"  [2020-11-21 Sat 03:10] \\
    Added. Certain things may still need to be improved.
  - State "SCHEDULED"  from              [2020-11-09 Mon 01:25] \\
    NerdTree in Vim was never particularly useful, but Emacs is more dynamic
    when it comes to dynamically combining buffers from different workflows
    within a single session.
** DONE evil mode for treemacs
   - State "DONE"       from "SCHEDULED"  [2020-11-21 Sat 03:09] \\
     Added. Some keybindings may still need to be improved.
   - State "SCHEDULED"  from              [2020-11-09 Mon 01:25] \\
     treemacs can be navigated using vim keybindings
** DONE lsp-treemacs integration
   - State "DONE"       from "SCHEDULED"  [2020-11-21 Sat 03:09] \\
     Integration seems to work, including a treemacs-based error
     list. However, appears to be a bit buggy at times.
   - State "SCHEDULED"  from              [2020-11-09 Mon 01:24] \\
     lsp-treemacs exists but need to read up on functionality first.
** DONE check interaction between treemacs workspaces and built in tab-bar mode
   - State "DONE"       from "PONDERING"  [2021-01-15 Fri 17:05] \\
     Added a custom hook-type function: when switching to a new tab via
     tab-bar mode, look for a treemacs workspace by the same name and switch
     to it if one exists.
   - State "PONDERING"  from "SCHEDULED"  [2020-11-21 Sat 03:08] \\
     This doesn't seem to exist currently, but may appear in the future.
   - State "SCHEDULED"  from              [2020-11-09 Mon 01:23] \\
     treemacs comes with its own notion of workspaces, but those are already
     integrated within the window management configuration file.



Archived entries from file /home/daniilbargman/.emacs.d/emacs-customization-ideas.org


* DONE Figure out a way to toggle full screen for a window
  :PROPERTIES:
  :ARCHIVE_TIME: 2021-01-15 Fri 17:32
  :ARCHIVE_FILE: ~/.emacs.d/emacs-customization-ideas.org
  :ARCHIVE_OLPATH: Improvement ideas for Emacs configuration
  :ARCHIVE_CATEGORY: emacs-customization-ideas
  :ARCHIVE_TODO: DONE
  :END:
  - State "DONE"       from "SCHEDULED"  [2020-11-08 Sun 00:25] \\
    Works with help from tab-bar-history-mode



Archived entries from file /home/daniilbargman/.emacs.d/emacs-customization-ideas.org


* DONE Open new buffers in splits using "C-w h,j,k,l"
  :PROPERTIES:
  :ARCHIVE_TIME: 2021-01-15 Fri 17:32
  :ARCHIVE_FILE: ~/.emacs.d/emacs-customization-ideas.org
  :ARCHIVE_OLPATH: Improvement ideas for Emacs configuration
  :ARCHIVE_CATEGORY: emacs-customization-ideas
  :ARCHIVE_TODO: DONE
  :END:
  - State "DONE"       from "PONDERING"  [2020-11-08 Sun 00:32] \\
    Implemented with the help of ivy and some custom functions.

  - State "PONDERING"  from              [2020-11-06 Fri 19:40] \\

    There seems to be no easy way to re-map vim's usual ":[e|vs|sp] <file>"
    commands to emacs functions, but the evil functionality for opening
    files and buffers is lacking. Completion for buffers is much better with
    Ivy, and completion for files is better with the built-in "C-x C-f"
    followed by "C-j" which opens an entire file system browsing window.
     
    Proposal is to map buffer-opening window splits to "C-w h,j,k,l" which
    is not used for any Vim functions after window movements were remapped.



Archived entries from file /home/daniilbargman/.emacs.d/emacs-customization-ideas.org


* DONE Code completion
  :PROPERTIES:
  :ARCHIVE_TIME: 2021-01-15 Fri 17:32
  :ARCHIVE_FILE: ~/.emacs.d/emacs-customization-ideas.org
  :ARCHIVE_OLPATH: Improvement ideas for Emacs configuration
  :ARCHIVE_CATEGORY: emacs-customization-ideas
  :ARCHIVE_TODO: DONE
  :END:
  - State "DONE"       from "TESTING"    [2020-11-08 Sun 00:25]
** DISCARDED add completion backend using files from local directory
   - State "DISCARDED"  from "SCHEDULED"  [2020-11-08 Sun 00:24] \\
     Mode is enabled but files only auto-filled when prefixed by path.
** DONE completion of code snippets
** DONE Unmap return from autocompletion; see [[https://emacs.stackexchange.com/questions/13286/how-can-i-stop-the-enter-key-from-triggering-a-completion-in-company-mode][here]]
** DONE toggle completion popup with C-a
   - State "DONE"       from "TESTING"    [2020-11-06 Fri 18:51] \\
     Done and mapped for normal and visual states. Will not work outside evil mode.
** DISCARDED add completion backend using function definitions in active file
   - State "DISCARDED"  from "SCHEDULED"  [2020-11-06 Fri 18:54] \\
     completions work in emacs lisp but only after file has been reloaded and re-compiled.
** DISCARDED Try out company-capf backend; see [[https://github.com/emacs-lsp/lsp-mode/issues/1442][here]]
   - State "DISCARDED"  from "DISCARDED"  [2020-11-06 Fri 18:42] \\
     turns out this is the default in lsp-mode



Archived entries from file /home/daniilbargman/.emacs.d/emacs-customization-ideas.org


* DONE Finish system-commands.el
  :PROPERTIES:
  :ARCHIVE_TIME: 2021-01-15 Fri 17:32
  :ARCHIVE_FILE: ~/.emacs.d/emacs-customization-ideas.org
  :ARCHIVE_OLPATH: Improvement ideas for Emacs configuration
  :ARCHIVE_CATEGORY: emacs-customization-ideas
  :ARCHIVE_TODO: DONE
  :END:
** DONE Customisation options take hold if defined in
   - State "DONE"       from "TESTING"    [2020-11-27 Fri 16:20]
*** DONE buffer
*** DONE dir-locals
*** DONE file header
    - State "DONE"       from "PONDERING"  [2020-11-27 Fri 16:19] \\
      Bash header works as elisp command
** DONE switch-to argument in function for creating buffers should override the hop-back value and keep cursor in newly created window, or hop to existing window with target buffer using "select-window (get-buffer-window))" function
** DONE Try switching from hop logic to "select-window (get-buffer-window) logic altogether by recording name of source buffer at the beginning
** DONE Finish other functions using a more modular approach
** DONE Move openvpn config to other module and rename this one into something like "interactive-shell.el"



Archived entries from file /home/daniilbargman/.emacs.d/emacs-customization-ideas.org


* DONE Line number column
  :PROPERTIES:
  :ARCHIVE_TIME: 2021-01-15 Fri 17:32
  :ARCHIVE_FILE: ~/.emacs.d/emacs-customization-ideas.org
  :ARCHIVE_OLPATH: Improvement ideas for Emacs configuration
  :ARCHIVE_CATEGORY: emacs-customization-ideas
  :ARCHIVE_TODO: DONE
  :END:



Archived entries from file /home/daniilbargman/.emacs.d/emacs-customization-ideas.org


* DONE Better status line
  :PROPERTIES:
  :ARCHIVE_TIME: 2021-01-15 Fri 17:32
  :ARCHIVE_FILE: ~/.emacs.d/emacs-customization-ideas.org
  :ARCHIVE_OLPATH: Improvement ideas for Emacs configuration
  :ARCHIVE_CATEGORY: emacs-customization-ideas
  :ARCHIVE_TODO: DONE
  :END:



Archived entries from file /home/daniilbargman/.emacs.d/emacs-customization-ideas.org


* DONE Ivy
  :PROPERTIES:
  :ARCHIVE_TIME: 2021-01-15 Fri 17:32
  :ARCHIVE_FILE: ~/.emacs.d/emacs-customization-ideas.org
  :ARCHIVE_OLPATH: Improvement ideas for Emacs configuration
  :ARCHIVE_CATEGORY: emacs-customization-ideas
  :ARCHIVE_TODO: DONE
  :END:



Archived entries from file /home/daniilbargman/.emacs.d/emacs-customization-ideas.org


* DONE Configure keybindings for flycheck (possibly via LSP)
  :PROPERTIES:
  :ARCHIVE_TIME: 2021-01-15 Fri 17:32
  :ARCHIVE_FILE: ~/.emacs.d/emacs-customization-ideas.org
  :ARCHIVE_OLPATH: Improvement ideas for Emacs configuration
  :ARCHIVE_CATEGORY: emacs-customization-ideas
  :ARCHIVE_TODO: DONE
  :END:



Archived entries from file /home/daniilbargman/.emacs.d/emacs-customization-ideas.org


* DONE K8S support
  :PROPERTIES:
  :ARCHIVE_TIME: 2021-01-15 Fri 17:32
  :ARCHIVE_FILE: ~/.emacs.d/emacs-customization-ideas.org
  :ARCHIVE_OLPATH: Improvement ideas for Emacs configuration
  :ARCHIVE_CATEGORY: emacs-customization-ideas
  :ARCHIVE_TODO: DONE
  :END:



Archived entries from file /home/daniilbargman/.emacs.d/emacs-customization-ideas.org


* DONE Configure and port code snippets
  :PROPERTIES:
  :ARCHIVE_TIME: 2021-01-15 Fri 17:32
  :ARCHIVE_FILE: ~/.emacs.d/emacs-customization-ideas.org
  :ARCHIVE_OLPATH: Improvement ideas for Emacs configuration
  :ARCHIVE_CATEGORY: emacs-customization-ideas
  :ARCHIVE_TODO: DONE
  :END:



Archived entries from file /home/daniilbargman/.emacs.d/emacs-customization-ideas.org


* DONE LSP
  :PROPERTIES:
  :ARCHIVE_TIME: 2021-01-15 Fri 17:32
  :ARCHIVE_FILE: ~/.emacs.d/emacs-customization-ideas.org
  :ARCHIVE_OLPATH: Improvement ideas for Emacs configuration
  :ARCHIVE_CATEGORY: emacs-customization-ideas
  :ARCHIVE_TODO: DONE
  :END:



Archived entries from file /home/daniilbargman/.emacs.d/emacs-customization-ideas.org


* DONE Bracket manipulation
  :PROPERTIES:
  :ARCHIVE_TIME: 2021-01-15 Fri 17:32
  :ARCHIVE_FILE: ~/.emacs.d/emacs-customization-ideas.org
  :ARCHIVE_OLPATH: Improvement ideas for Emacs configuration
  :ARCHIVE_CATEGORY: emacs-customization-ideas
  :ARCHIVE_TODO: DONE
  :END:



Archived entries from file /home/daniilbargman/.emacs.d/emacs-customization-ideas.org


* DONE Refactor config files
  :PROPERTIES:
  :ARCHIVE_TIME: 2021-01-15 Fri 17:32
  :ARCHIVE_FILE: ~/.emacs.d/emacs-customization-ideas.org
  :ARCHIVE_OLPATH: Improvement ideas for Emacs configuration
  :ARCHIVE_CATEGORY: emacs-customization-ideas
  :ARCHIVE_TODO: DONE
  :END:



Archived entries from file /home/daniilbargman/.emacs.d/emacs-customization-ideas.org


* DISCARDED Evil plugin for Org mode
  :PROPERTIES:
  :ARCHIVE_TIME: 2021-01-15 Fri 17:32
  :ARCHIVE_FILE: ~/.emacs.d/emacs-customization-ideas.org
  :ARCHIVE_OLPATH: Improvement ideas for Emacs configuration
  :ARCHIVE_CATEGORY: emacs-customization-ideas
  :ARCHIVE_TODO: DISCARDED
  :END:
  - State "DISCARDED"  from "PONDERING"  [2020-11-21 Sat 03:07] \\
    Easier to add the necessary keybindings manually as needed.
  - State "PONDERING"  from              [2020-11-07 Sat 15:15] \\
    Check out evil-org and weigh pros and cons between using vim keybindings
    for Org mode commands.



Archived entries from file /home/daniilbargman/.emacs.d/emacs-customization-ideas.org


* DISCARDED map evil-ex file opening commands to counsel commands
  :PROPERTIES:
  :ARCHIVE_TIME: 2021-01-15 Fri 17:32
  :ARCHIVE_FILE: ~/.emacs.d/emacs-customization-ideas.org
  :ARCHIVE_OLPATH: Improvement ideas for Emacs configuration
  :ARCHIVE_CATEGORY: emacs-customization-ideas
  :ARCHIVE_TODO: DISCARDED
  :END:
  - State "DISCARDED"  from "SCHEDULED"  [2020-11-08 Sun 00:26] \\
    Came up with different mappings instead as evil-ex command not easily
    customizable. Buffers and splits can now be opened with "C-w w,j,l"
    as per another TODO item.



Archived entries from file /home/daniilbargman/.emacs.d/emacs-customization-ideas.org


* DISCARDED map "+p to paste-with-replacement in visual state
  :PROPERTIES:
  :ARCHIVE_TIME: 2021-01-15 Fri 17:32
  :ARCHIVE_FILE: ~/.emacs.d/emacs-customization-ideas.org
  :ARCHIVE_OLPATH: Improvement ideas for Emacs configuration
  :ARCHIVE_CATEGORY: emacs-customization-ideas
  :ARCHIVE_TODO: DISCARDED
  :END:
  - State "DISCARDED"  from "SCHEDULED"  [2020-11-08 Sun 00:28] \\
    This seems to work out of the box now. Before was a glitch.



Archived entries from file /home/daniilbargman/.emacs.d/emacs-customization-ideas.org


* DISCARDED Try out ivy-push-view
  :PROPERTIES:
  :ARCHIVE_TIME: 2021-01-15 Fri 17:32
  :ARCHIVE_FILE: ~/.emacs.d/emacs-customization-ideas.org
  :ARCHIVE_OLPATH: Improvement ideas for Emacs configuration
  :ARCHIVE_CATEGORY: emacs-customization-ideas
  :ARCHIVE_TODO: DISCARDED
  :END:
  - State "DISCARDED"  from "SCHEDULED"  [2020-11-08 Sun 00:29] \\
    Discarded as option for sessions because views cannot be easily
    persisted. Upgrading to Emacs 27 and using tab-bar-mode instead.



Archived entries from file /home/daniilbargman/.emacs.d/emacs-customization-ideas.org


* DISCARDED Use ivy-hydra for vim-like bindings
  :PROPERTIES:
  :ARCHIVE_TIME: 2021-01-15 Fri 17:32
  :ARCHIVE_FILE: ~/.emacs.d/emacs-customization-ideas.org
  :ARCHIVE_OLPATH: Improvement ideas for Emacs configuration
  :ARCHIVE_CATEGORY: emacs-customization-ideas
  :ARCHIVE_TODO: DISCARDED
  :END:
  - State "DISCARDED"  from "PONDERING"  [2020-11-07 Sat 15:31] \\
    It seems Hydra is a package that amis to improve on Emacs keybindings
    rather than provide a vim-style interface. Not doing this for the time being.



